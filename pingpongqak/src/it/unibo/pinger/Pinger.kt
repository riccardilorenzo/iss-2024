/* Generated by AN DISI Unibo */ 
package it.unibo.pinger

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Pinger ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outmagenta("Hello, I am the $name!")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="sWait", cond=doswitch() )
				}	 
				state("sWait") { //this:State
					action { //it:State
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="sPing",cond=whenDispatch("ping"))
					transition(edgeName="t01",targetState="sPong",cond=whenDispatch("pong"))
				}	 
				state("sPing") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("ping(N)"), Term.createTerm("ping(N)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="sWait", cond=doswitch() )
				}	 
				state("sPong") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("pong(N)"), Term.createTerm("pong(N)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="sWait", cond=doswitch() )
				}	 
			}
		}
} 
